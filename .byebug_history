atom .
command.output
command
c
command.class
command
command.options
command.methods - Object.methods
command.methods
command
c
Cocaine::CommandLine.new("pwd", "", runner_options: { chdir: dir }).run
c
Cocaine::CommandLine.new("pwd", "", runner_options: { chdir: dir }).run
c
"test" "test2"
params
s
c
up
u
@params
up
help
u
pattern
interpolations
s
up
u
s
n
s
c
n
s
c
n
c
n
up
n
help
c
u
stat
n
c
Cocaine::CommandLine.new("pwd", "", runner_options: { chdir: dir }).run
c
Cocaine::CommandLine.new("pwd", "", chdir: dir).run
c
Cocaine::CommandLine.runner
Cocaine::CommandLine.new("pwd", "", chdir: dir).run
c
Cocaine::CommandLine.new("pwd", "", chdir: dir).run
Cocaine::CommandLine.new("pwd", chdir: dir).run
continue
`pwd`
Cocaine::CommandLine.new("pwd").run
=> 15:           Cocaine::CommandLine.new("pwd").run
c
Cocaine::CommandLine.path
Cocaine::CommandLine.new("pwd").send(:path_prefix)
Cocaine::CommandLine.new("pwd").path_prefix
Cocaine::CommandLine.new("pwd").path
Cocaine::CommandLine.new("cd #{dir} && pwd").run
Cocaine::CommandLine.new("cd #{dir} && git", "init").run
   16:
Cocaine::CommandLine.new("cd #{dir} && git", "init").run
c
n
c
Cocaine::CommandLine.new("pwd").run
Cocaine::CommandLine.new("pwd")
`pwd`
n
c
`pwd`
n
`pwd`
`cd #{dir}`
`cd dir`
`pwd`
c
dir
c
p dir
p di
c
@arguments
c
repo_name
c
_options
args
c
Info.command
c
Packer::Cli::Info.instance_methods - Object.instance_methods
Packer::Cli::Info.methods - Object.methods
Packer::Cli::Info.command
Packer::Cli::Info.command_spec
c
Packer::Cli::Info.command_spec
c
q
Packer::Cli::Info.command_spec
Packer::Clie::Info.command_spec
Info.command_spec
Info
c
Info.command
Info
c
Info.command
Info.methods
Info
info
c
Info.command
c
Info.methods - Object.methods
Info.instance_methods - Object.instance_methods
Info.instance_methods
Info.command
c
Info
Info.command
c
Info.command
c
Info.command
reload!
Info.command_spec
Info
c
Info.methods
Info.class_methods
Info.methods - Object.methods
Info.new('asd')
Info.new
Info
c
Info
Info.class
Info.methods - Object.methods
Info.methods
c
Info.methods
Info.methods - Object.methods
Info
c
Info.new(args.first)
Info.new(args.first).run
Info.new.run(args.first)
args
Info.new.run {}
Info.new.run
Info
RUBY_ENGINE
RUBY_VERSION
echo RUBY_VERSION
Bundler.current_ruby.to_s
Bundler.current_ruby
Bundler.current_version
Bundler.current_version.to_s
continue
brew tap codeclimate/formulae
Bundler.definition.specs.map(&:name)
Bundler.definition.map(&:name)
Bundler.definition.specs.map(&:name)
Bundler.definition.specs.map(&:to_s)
Bundler.definition.specs
Bundler.definition.spec
Bundler.definition.ruby_version
Bundler.definition.lock
(Bundler.definition.methods - Object.methods).sor
Bundler.definition.resolve_remotely!
Bundler.definition.resolve
Bundler.definition.locked_deps
Bundler.definition.dependencies
Bundler.definition.current_dependencies
Bundler.current_dependencies
(Bundler.definition.methods - Object.methods).sort
Bundler.definition
Bundler.settings
(Bundler.methods - Object.methods).sort
(Bundler.current_ruby.methods - Object.methods).sort
Bundler.
Bundler.current_ruby.
Bundler.current_ruby
(Bundler.methods - Object.methods).sort
Bundler.version
